version: '3'

networks:
  de-toolkit-net:
    name: ${DOCKER_NETWORK:-de-toolkit-net}

x-toolkit-common: &toolkit-common
  networks:
    - ${DOCKER_NETWORK:-de-toolkit-net}  


volumes:
  # clickhouse-data:
  metabase-data:
  metabase-db:
  postgres-data:
  airflow-pg-data:

services:
  # clickhouse:
  #   image: clickhouse/clickhouse-server:${CH_VERSION:-latest}
  #   hostname: clickhouse
  #   ports:
  #     - 8123:8123
  #     - 9000:9000
  #   volumes:
  #     # - "./clickhouse/data:/var/lib/clickhouse/"
  #     - clickhouse-data:/var/lib/clickhouse/
  #     - "./clickhouse/logs:/var/log/clickhouse-server/"
  #     # - "./clickhouse/users.xml:/etc/clickhouse-server/users.xml"
  #     # - "./clickhouse/config.xml:/etc/clickhouse-server/config.xml"
  #     # - "./clickhouse/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql"
  #   # depends_on:
  #   #   - kafka
  #   environment:
  #     - CLICKHOUSE_DB=${DE_DB_NAME:-de}
  #     - CLICKHOUSE_USER=${DE_USERNAME:-de_user}
  #     - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1 
  #     - CLICKHOUSE_PASSWORD=${DE_PASSWORD:-de_pass}
  #     - CLICKHOUSE_INIT_TIMEOUT=12
  #   <<: *toolkit-common
  airflow-postgresql:
    image: bitnami/postgresql:${AIRFLOW_DATABASE_VERSION:-airflow}
    ports:
      - "15432:15432"
    volumes:
      - 'airflow-pg-data:/bitnami/postgresql'
    environment:
      - POSTGRESQL_DATABASE=${AIRFLOW_DATABASE:-airflow}
      - POSTGRESQL_PORT_NUMBER:${AIRFLOW_DATABASE_PORT:-airflow}
      - POSTGRESQL_USERNAME=${DE_USERNAME:-de_user}
      - POSTGRESQL_PASSWORD=${DE_PASSWORD:-de_pass}
      #- ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
    <<: *toolkit-common
  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - "./airflow/redis:/bitnami/redis"
    <<: *toolkit-common
  airflow-worker:
    image: bitnami/airflow-worker:${AIRFLOW_VERSION:-latest}
    depends_on:
      - airflow-postgresql
      - redis
    volumes:
      - "./airflow/dags:/opt/bitnami/airflow/dags"
      - "./airflow/dags/requirements.txt:/bitnami/python/requirements.txt"
      - "./airflow/plugins:/opt/bitnami/airflow/plugins"
    environment:
      - AIRFLOW_FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW_SECRET_KEY=a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_USERNAME=${DE_USERNAME:-de_user}
      - AIRFLOW_PASSWORD=${DE_PASSWORD:-de_pass}
      - AIRFLOW_DATABASE_HOST=airflow-postgresql
      - AIRFLOW_DATABASE_PORT_NUMBER:${AIRFLOW_DATABASE_PORT:-airflow}
      - AIRFLOW_DATABASE_NAME=${AIRFLOW_DATABASE:-airflow}
      - AIRFLOW_DATABASE_USERNAME=${DE_USERNAME:-de_user}
      - AIRFLOW_DATABASE_PASSWORD=${DE_PASSWORD:-de_pass}
      - AIRFLOW_LOAD_EXAMPLES=no
      - AIRFLOW_WEBSERVER_HOST=airflow
    <<: *toolkit-common
  airflow-scheduler:
    image: bitnami/airflow-scheduler:${AIRFLOW_VERSION:-latest}
    depends_on:
      - airflow-postgresql
      - airflow
      - redis
    volumes:
      - "./airflow/dags:/opt/bitnami/airflow/dags"
      - "./airflow/dags/requirements.txt:/bitnami/python/requirements.txt"
      - "./airflow/plugins:/opt/bitnami/airflow/plugins"
    environment:
      - AIRFLOW_FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW_SECRET_KEY=a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_USERNAME=${DE_USERNAME:-de_user}
      - AIRFLOW_PASSWORD=${DE_PASSWORD:-de_pass}
      - AIRFLOW_DATABASE_HOST=airflow-postgresql
      - AIRFLOW_DATABASE_PORT_NUMBER:${AIRFLOW_DATABASE_PORT:-airflow}
      - AIRFLOW_DATABASE_NAME=${AIRFLOW_DATABASE:-airflow}
      - AIRFLOW_DATABASE_USERNAME=${DE_USERNAME:-de_user}
      - AIRFLOW_DATABASE_PASSWORD=${DE_PASSWORD:-de_pass}
      - AIRFLOW_LOAD_EXAMPLES=no
      - AIRFLOW_WEBSERVER_HOST=airflow
    <<: *toolkit-common
  airflow:
    image: bitnami/airflow:${AIRFLOW_VERSION:-latest}
    depends_on:
      - airflow-postgresql
      - redis    
    volumes:
      - "./airflow/dags:/opt/bitnami/airflow/dags"
      - "./airflow/dags/requirements.txt:/bitnami/python/requirements.txt"
      - "./airflow/plugins:/opt/bitnami/airflow/plugins"
    environment:
      - AIRFLOW_FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW_SECRET_KEY=a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_DATABASE_HOST=airflow-postgresql
      - AIRFLOW_DATABASE_PORT_NUMBER:${AIRFLOW_DATABASE_PORT:-airflow}
      - AIRFLOW_DATABASE_NAME=${AIRFLOW_DATABASE:-airflow}
      - AIRFLOW_DATABASE_USERNAME=${DE_USERNAME:-de_user}
      - AIRFLOW_DATABASE_PASSWORD=${DE_PASSWORD:-de_pass}
      - AIRFLOW_PASSWORD=${DE_PASSWORD:-de_pass}
      - AIRFLOW_USERNAME=${DE_USERNAME:-de_user}
      - AIRFLOW_EMAIL=user@example.com
    ports:
      - '8080:8080'
    <<: *toolkit-common
# postgresql
  postgresql:
    image: 'bitnami/postgresql:${PG_VERSION:-latest}'
    container_name: postgresql
    hostname: postgresql
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/bitnami/postgresql
      # - "./postgresql/data:/bitnami/postgresql"
#      - "./airflow/1_create_de_user_d.sql:/docker-entrypoint-initdb.d/1_create_de_user_db.sql"
#      - "./airflow/create_airflow_db.sql:/docker-entrypoint-initdb.d/create_airflow_db.sql"
    environment:
      - POSTGRESQL_DATABASE=${DE_DB_NAME:-de}
      - POSTGRESQL_USERNAME=${DE_USERNAME:-de_user}
      - POSTGRESQL_PASSWORD=${DE_PASSWORD:-de_pass}
    healthcheck:
      interval: 10s
      retries: 60
      start_period: 2s
      test: pg_isready -q -d $${DE_DB_NAME:-de} -U $${DE_USERNAME:-de_user} || exit 1
    <<: *toolkit-common
# metabase
  metabase-db:
    image: 'bitnami/postgresql:${PG_VERSION:-latest}'
    hostname: metabase-db
    ports:
      - '25432:5432'
    <<: *toolkit-common
    healthcheck:
      interval: 10s
      retries: 60
      start_period: 2s
      test: pg_isready -q -d $${DE_DB_NAME:-de} -U $${DE_USERNAME:-de_user} || exit 1
      timeout: 2s
    volumes:
      - metabase-db:/bitnami/postgresql
      # - "./metabase/create_metabase_db.sql:/docker-entrypoint-initdb.d/create_metabase_db.sql"
    environment:
      - POSTGRESQL_DATABASE=metabase
      - POSTGRESQL_USERNAME=${DE_USERNAME:-de_user}
      - POSTGRESQL_PASSWORD=${DE_PASSWORD:-de_pass}
  metabase:
    image: metabase/metabase:${METABASE_VERSION:-latest}
    container_name: metabase
    depends_on:
      - metabase-db
    hostname: metabase
    ports:
      - "3000:3000"
    <<: *toolkit-common
    volumes:
      - "./metabase/plugins/clickhouse.metabase-driver.jar:/plugins/clickhouse.metabase-driver.jar"
      - "metabase-data:/metabase-data"
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=metabase
      - MB_DB_PORT=5432
      - MB_DB_USER=${DE_USERNAME:-de_user}
      - MB_DB_PASS=${DE_PASSWORD:-de_pass}
      - MB_DB_HOST=metabase-db
      - MB_PLUGINS_DIR=/plugins/
  dbt:
    # image: ghcr.io/dbt-labs/dbt-clickhouse:${DBT_VERSION:-1.2.0}
    build: dbt/
    volumes:
      - "./dbt:/usr/app"
      - "./dbt/profiles.yml:/root/.dbt/profiles.yml"
    ports:
      - 9090:9090
    command: "docs serve --port 9090"
    environment:
      - DBT_USER=de_user
      - DBT_PASSWORD=de_pass
    tty: true
    <<: *toolkit-common